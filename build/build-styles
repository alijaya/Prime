#!/bin/bash
# script to build and run the css-parser

BUILDSCRIPTDIR=${0//\\//}
BUILDSCRIPTDIR="${BUILDSCRIPTDIR%/*}"
PRIMEVC_ROOT=`cd "${BUILDSCRIPTDIR}/.."; pwd;`
STYLE_ROOT="${PRIMEVC_ROOT}/prime-css/src/"
#STYLE_ROOT=$(haxelib path prime-css | sed -n 1p)
#PRJROOT=${PRIMEVC_ROOT}

MINPARAMS=1
StyleFolder="$1"
MainClass="prime.tools.CSSParserMain"
ParserClass="prime.tools.CSSParser"
SourceFolder="${PRIMEVC_ROOT}/src"
MainFile="${SourceFolder}/${MainClass//.//}.hx"			#replace all dots with slashes
ParserClass="${SourceFolder}/${ParserClass//.//}.hx"	#replace all dots with slashes
Parser="${PRIMEVC_ROOT}/build/parser.js"
Force=false
#Resource=""

#parse arguments
while getopts "s:tfd" OptionName
	do
		case $OptionName in
			s ) StyleFolder="${OPTARG}";;
			f ) Force=true;;
			d ) Debug="-debug";;
		#	p ) PRJROOT=${OPTARG};;	#project root (used for styles)
	esac
done

if [ -z $StyleFolder ]; then echo "Usage: build-styles <path/to/style/directory>"; exit 1; fi;

#StyleFolder="$PRJROOT/$STYLE"
StyleInputFile="$StyleFolder/Style.css"
StyleOutputFile="$StyleFolder/StyleSheet.hx"
#ManifestFile="${StyleFolder}/manifest.xml"

#echo "MainFile: ${MainFile}"
#echo -e "\tMain: $MainClass"
#echo "Manifest: $ManifestFile" &&
#echo -e "\tDebugging? ${Debug:-false}"

CompilerUpdated=false

#cd "$PRIMEVC_ROOT" &&

#create parser if the source files have changed
if $Force || [[ ! -f "$Parser" ]]  ||  test "$MainFile" -nt "$Parser"  ||  test "$ParserClass" -nt "$Parser"; then  # ||  test ${StyleFile} -nt ${Parser} ; then
	echo -e "\tCompiling parser"
	cd "$PRIMEVC_ROOT"
	time haxe build/build-cssparser.hxml \
		-main $MainClass \
		-js "$Parser" \
		$Debug \
		${Debug:---no-traces --dead-code-elimination} || exit 1;
	CompilerUpdated=true
	cd -
fi;

if [[ ! -f "$Parser" ]] ; then
	echo -e "\tError compiling parser"
	exit 1
fi;

#compile css
if [[ -d "$StyleFolder" ]] && [[ -f "$StyleInputFile" ]] ; then # && [[ -f ${ManifestFile} ]] ; then
	if "$CompilerUpdated" || [[ ! -f "$StyleOutputFile" ]] || test "$StyleInputFile" -nt "$StyleOutputFile" || test "$Parser" -nt "$StyleOutputFile"; then # || test ${ManifestFile} -nt ${StyleOutputFile} ; then
		echo -e "\tStyleInput: $StyleInputFile"
		echo -e "\tStyleOutput: $StyleOutputFile"
		echo -e "\tRunning parser on ${StyleInputFile}"
		node "$Parser" "$StyleFolder" "$STYLE_ROOT" || exit 1;
	else	
		echo -e "\tStyle is already compiled and up to date.."
	fi;
	exit 0
else
	echo -e "\tStyle '$StyleInputFile' doesn't exist!"
	exit 1
fi;